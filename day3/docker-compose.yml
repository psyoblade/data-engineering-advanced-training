services:
  mysql:
    container_name: mysql
    image: psyoblade/data-engineer-mysql:1.1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
      MYSQL_USER: sqoop
      MYSQL_PASSWORD: sqoop
    ports:
      - '3306:3306'
    networks:
      - default
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 3s
      timeout: 1s
      retries: 3
    volumes:
      - ./mysql/etc:/etc/mysql/conf.d
  mongo:
    image: mongo:4.4.2
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
  notebook:
    container_name: notebook
    user: root
    privileged: true
    image: psyoblade/data-engineer-notebook:1.6
    restart: always
    volumes:
      - ./notebooks:/home/jovyan/work
    environment:
      - GRANT_SUDO=yes
    ports:
      - "4040-4049:4040-4049"
      - "8080:8080"
      - "8888:8888"
  zookeeper:
    container_name: zookeeper
    image: psyoblade/data-engineer-zookeeper:1.0
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    image: psyoblade/data-engineer-kafka:1.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "events:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  cassandra:
    container_name: cassandra
    image: psyoblade/data-engineer-cassandra:1.0
    ports:
      - "7001:7000"

networks:
  default:
    name: advanced_day3_network

